{"version":3,"sources":["components/UI/Loader/loader.svg","assets/image sync nonrecursive /.(png|jpe?g|svg)$","assets/image/BeruWhitesunlars.jpg","assets/image/BiggsDarklighter.jpg","assets/image/C-3PO.jpg","assets/image/DarthVader.jpg","assets/image/LeiaOrgana.jpg","assets/image/LukeSkywalker.jpg","assets/image/Obi-WanKenobi.jpg","assets/image/OwenLars.jpg","assets/image/R2-D2.jpg","assets/image/R5-D4.jpg","components/ListHeroes/ItemHero/ItemHero.js","axios/axios-herous.js","components/UI/Loader/Loader.js","components/ListHeroes/ListHeroes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","ItemHero","props","images","r","item","index","replace","importAll","require","nameImg","hero","name","split","join","className","src","alt","gender","birth_year","eye_color","axios","create","baseURL","Loader","loader","ListHeroes","state","hesous","loading","this","key","onClick","changeHero","get","response","data","results","setState","console","log","error","Fragment","renderHesous","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d34963d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.32fe4dc6.svg\";","var map = {\n\t\"./BeruWhitesunlars.jpg\": 29,\n\t\"./BiggsDarklighter.jpg\": 30,\n\t\"./C-3PO.jpg\": 31,\n\t\"./DarthVader.jpg\": 32,\n\t\"./LeiaOrgana.jpg\": 33,\n\t\"./LukeSkywalker.jpg\": 34,\n\t\"./Obi-WanKenobi.jpg\": 35,\n\t\"./OwenLars.jpg\": 36,\n\t\"./R2-D2.jpg\": 37,\n\t\"./R5-D4.jpg\": 38\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","module.exports = __webpack_public_path__ + \"static/media/BeruWhitesunlars.8f4b4f89.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BiggsDarklighter.daac3de8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/C-3PO.ce3e6047.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DarthVader.0f26e915.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LeiaOrgana.53c0b037.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LukeSkywalker.c5857f7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Obi-WanKenobi.74aeb9f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/OwenLars.dac79974.jpg\";","module.exports = __webpack_public_path__ + \"static/media/R2-D2.79c869ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/R5-D4.210c16d2.jpg\";","import React from 'react'\r\nimport './ItemHero.scss'\r\n\r\nconst ItemHero = (props) => {\r\n\r\n\r\n\r\n  function importAll(r) {\r\n    let images = {};\r\n    r.keys().map((item, index) => { images[item.replace('./', '')] = r(item)})\r\n    return images;\r\n  }\r\n\r\n  const images = importAll(require.context('../../../assets/image', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n  const nameImg = `${props.hero.name.split(' ').join('')}.jpg`\r\n  return (\r\n    <div className=\"ItemHero\">\r\n      <img className=\"ItemHero__img\" src={images[nameImg]} alt={props.hero.name}/>\r\n      <div className=\"ItemHero__content\">\r\n        <h4 className=\"ItemHero__title\">\r\n          {props.hero.name}\r\n        </h4>\r\n        <ul className=\"ItemHero__list\">\r\n          <li>Gender {props.hero.gender}</li>\r\n          <li>Brith Year {props.hero.birth_year}</li>\r\n          <li>Eye Color {props.hero.eye_color}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemHero","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://swapi.co/api/people/'\r\n  // baseURL: 'https://starwars-visualguide.com/#/characters?page=1/'\r\n})","import React from 'react'\r\n\r\nimport loader from './loader.svg'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => (\r\n\r\n  <div className=\"Loader\">\r\n    <img src={loader} className=\"Loader-img\" alt=\"Loading...\" />\r\n  </div>\r\n  \r\n)\r\n  \r\nexport default Loader","import  React, {Component} from 'react'\r\n\r\nimport './ListHeroes.scss'\r\nimport axios from '../../axios/axios-herous'\r\nimport Loader from '../UI/Loader/Loader'\r\n\r\nexport default class ListHeroes extends Component {\r\n  state = {\r\n    hesous: [],\r\n    loading: true\r\n  }\r\n\r\n  renderHesous() {\r\n    return this.state.hesous.map(hero => {\r\n      return (\r\n        <li\r\n          key={hero.name}\r\n          onClick={() => { this.props.changeHero(hero)}}\r\n        >\r\n          {hero.name}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get()\r\n\r\n      const hesous = response.data.results\r\n\r\n      this.setState({\r\n        hesous,\r\n        loading: false\r\n      })\r\n      console.log(response)\r\n\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          this.state.loading\r\n          ? <Loader />\r\n          : <ul className=\"ListHeroes\">\r\n            {this.renderHesous()}\r\n          </ul>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport ItemHero from './components/ListHeroes/ItemHero/ItemHero';\r\nimport ListHeroes from './components/ListHeroes/ListHeroes';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {}\r\n  }\r\n\r\n  changeHero = (hero) => { \r\n    this.setState({ hero: hero })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ListHeroes changeHero={this.changeHero}/>\r\n        {\r\n          this.state.hero\r\n          ? <ItemHero hero={this.state.hero}/>\r\n          : null\r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}